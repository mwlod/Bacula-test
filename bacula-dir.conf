#
# Default Bacula Director Configuration file
#
#  The only thing that MUST be changed is to add one or more
#   file or directory names in the Include directive of the
#   FileSet resource.
#
#  For Bacula release 5.0.3 (04 August 2010) -- freebsd 9.0-RELEASE
#
#  You might also want to change the default email address
#   from root to your address.  See the "mail" and "operator"
#   directives in the Messages resource.
#

Director {          # define myself
  Name = vm-bsd-test-dir        # name of director (used in bacula-fd.conf and bconsole.conf)
  DIR Address = 192.168.154.128 # IP address of server
  DIRport = 9101                # where we listen for UA connections
  QueryFile = "/usr/local/share/bacula/query.sql"    #location of file where bacula puts DB queries
  WorkingDirectory = "/var/db/bacula"
  PidDirectory = "/var/run"
  Maximum Concurrent Jobs = 1   # max number of jobs performed at the same time
  Password = "dupadupa"         # Console password
  Messages = Daemon
}

JobDefs {   # defines defaults for Jobs
  Name = "Default"
  Type = Backup
  Level = Full
  Client = vm-bsd-client-fd     # defined below
  FileSet = "Full Set"          # defined below
  Schedule = "WeeklyCycle"      # defined below
  Storage = HDD                 # defined below
  Messages = Standard
  Pool = File                   # defined below
  Priority = 10
  Write Bootstrap = "/var/db/bacula/%c.bsr"
}

# Define the main nightly save backup job
#   By default, this job will back up to disk in /tmp

Job {
  Name = "Test"                # name of Job (appears in bconsole, messages etc.)
  JobDefs = "Default"   # use previously defined defaults
}

# Backup the catalog database (after the nightly save)

Job {
  Name = "Backup Catalog"
  JobDefs = "Default"
  Level = Full
  FileSet = "Catalog"
  Schedule = "WeeklyCycleAfterBackup"
  # This creates an ASCII copy of the catalog
  # Arguments to make_catalog_backup.pl are:
  #  make_catalog_backup.pl <catalog-name>
  RunBeforeJob = "/usr/local/share/bacula/make_catalog_backup.pl MyCatalog"
  # This deletes the copy of the catalog
  RunAfterJob  = "/usr/local/share/bacula/delete_catalog_backup"
  Write Bootstrap = "/var/db/bacula/%n.bsr"
  Priority = 11                   # run after main backup
}

# Standard Restore template, to be changed by Console program
#  Only one such job is needed for all Jobs/Clients/Storage ...

Job {
  Name = "RestoreFiles"
  Type = Restore
  Client = vm-bsd-client-fd                 
  FileSet = "Full Set"                  
  Storage = HDD                      
  Pool = Default
  Messages = Standard
  Where = /tmp/bacula-restores
}


# List of files to be backed up

FileSet {
  Name = "Full Set"
  Include {
    Options {
      signature = MD5
    }
        
#  Put your list of files here, preceded by 'File =', one per line
#    or include an external list with:
#
#    File = <file-name
#
#  Note: / backs up everything on the root partition.
#    if you have other partitions such as /usr or /home
#    you will probably want to add them too.
#
#  By default this is defined to point to the Bacula binary
#    directory to give a reasonable FileSet to backup to
#    disk storage during initial testing.
#
    File = /
    File = /usr/local/sbin
    File = /home
  }

# If you backup the root directory, the following two excluded
#   files can be useful

  Exclude {
    File = /var/db/bacula
    File = /tmp
    File = /proc
    File = /tmp
    File = /.journal
    File = /.fsck
  }
}

#  When to do the backups, full backup on first sunday of the month,
#  differential (i.e. incremental since full) every other sunday,
#  and incremental backups other days
Schedule {
  Name = "WeeklyCycle"
  Run = Full 1st sun at 23:05
  Run = Differential 2nd-5th sun at 23:05
  Run = Incremental mon-sat at 23:05
}

# This schedule does the catalog. It starts after the WeeklyCycle
Schedule {
  Name = "WeeklyCycleAfterBackup"
  Run = Full sun-sat at 23:10
}

Schedule {
  Name = "Daily"
  Run = Full daily at 15:15
}

# This is the backup of the catalog
FileSet {
  Name = "Catalog"
  Include {
    Options {
      signature = MD5
    }
    File = "/var/db/bacula/bacula.sql"
  }
}

# Client (File Services) to backup
Client {
  Name = vm-bsd-client-fd             # Clients/File Deamon's name (must match existing) 
  Address = 192.168.154.129           # Client's IP address
  FDPort = 9102
  Catalog = BaculaCatalog
  Password = "dupadupa"               # password for FileDaemon
  File Retention = 30 days            # 30 days
  Job Retention = 6 months            # six months
  AutoPrune = yes                     # Prune expired Jobs/Files
}

# Definition of file storage device

Storage {
  Name = HDD
# Do not use "localhost" here    
  Address = 192.168.154.128                # N.B. Use a fully qualified name here
  SDPort = 9103
  Password = "dupadupa"
  Device = Disk
  Media Type = File
}

# Generic catalog service
Catalog {
  Name = BaculaCatalog
# Uncomment the following line if you want the dbi driver
# dbdriver = "dbi:mysql"; dbaddress = 127.0.0.1; dbport =  
  dbname = "bacula"; dbuser = "bacula"; dbpassword = ""
}

# Reasonable message delivery -- send most everything to email address
#  and to the console
Messages {
  Name = Standard
#
# NOTE! If you send to two email or more email addresses, you will need
#  to replace the %r in the from field (-f part) with a single valid
#  email address in both the mailcommand and the operatorcommand.
#  What this does is, it sets the email address that emails would display
#  in the FROM field, which is by default the same email as they're being
#  sent to.  However, if you send email to more than one address, then
#  you'll have to set the FROM address manually, to a single address. 
#  for example, a 'no-reply@mydomain.com', is better since that tends to
#  tell (most) people that its coming from an automated source.

#  Curently disabled e-mail messageing
#  mailcommand = "/usr/local/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: %t %e of %c %l\" %r"
#  operatorcommand = "/usr/local/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: Intervention needed for %j\" %r"
#  mail = root@localhost = all, !skipped            
#  operator = root@localhost = mount
  console = all, !skipped, !saved
#
# WARNING! the following will create a file that you must cycle from
#          time to time as it will grow indefinitely. However, it will
#          also keep all your messages if they scroll off the console.
#
  append = "/var/db/bacula/log" = all, !skipped
  catalog = all
}


#
# Message delivery for daemon messages (no job).
Messages {
  Name = Daemon
#  mailcommand = "/usr/local/sbin/bsmtp -h 192.168.154.128 -f \"\(Bacula\) \<%r\>\" -s \"Bacula daemon message\" %r"
#  mail = michal@localhost = all, !skipped            
  console = all, !skipped, !saved
  append = "/var/db/bacula/log" = all, !skipped
}

# Default pool definition
Pool {
  Name = Default
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365 days         # one year
}

# File Pool definition
Pool {
  Name = File
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365 days         # one year
  Maximum Volume Bytes = 50G          # Limit Volume size to something reasonable
  Maximum Volumes = 100               # Limit number of Volumes in Pool
}


# Scratch pool definition
Pool {
  Name = Scratch
  Pool Type = Backup
}

#
# Restricted console used by tray-monitor to get the status of the director
#
Console {
  Name = vm-bsd-test-mon
  Password = "dupadupa"
  CommandACL = status, .status
}
